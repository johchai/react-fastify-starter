// This file is auto-generated by @hey-api/openapi-ts

export type GetApiAuthMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/auth/me";
};

export type GetApiAuthMeErrors = {
  /**
   * Unauthorized: Invalid or expired token
   */
  401: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Error: Internal Server Error
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type GetApiAuthMeError = GetApiAuthMeErrors[keyof GetApiAuthMeErrors];

export type GetApiAuthMeResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type GetApiAuthMeResponse =
  GetApiAuthMeResponses[keyof GetApiAuthMeResponses];

export type PostApiAuthLoginData = {
  body: {
    email: string;
    password: string;
  };
  path?: never;
  query?: never;
  url: "/api/auth/login";
};

export type PostApiAuthLoginErrors = {
  /**
   * Default Response
   */
  401: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type PostApiAuthLoginError =
  PostApiAuthLoginErrors[keyof PostApiAuthLoginErrors];

export type PostApiAuthLoginResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type PostApiAuthLoginResponse =
  PostApiAuthLoginResponses[keyof PostApiAuthLoginResponses];

export type PostApiAuthLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/auth/logout";
};

export type PostApiAuthLogoutResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      [key: string]: unknown;
    };
    timestamp: string;
  };
};

export type PostApiAuthLogoutResponse =
  PostApiAuthLogoutResponses[keyof PostApiAuthLogoutResponses];

export type PostApiAuthRefreshData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/auth/refresh";
};

export type PostApiAuthRefreshErrors = {
  /**
   * Unauthorized: Invalid or expired token
   */
  401: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Error: Internal Server Error
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type PostApiAuthRefreshError =
  PostApiAuthRefreshErrors[keyof PostApiAuthRefreshErrors];

export type PostApiAuthRefreshResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type PostApiAuthRefreshResponse =
  PostApiAuthRefreshResponses[keyof PostApiAuthRefreshResponses];

export type PostApiAuthRegisterData = {
  body: {
    name: string;
    email: string;
    password: string;
    role: "admin" | "editor" | "viewer";
  };
  path?: never;
  query?: never;
  url: "/api/auth/register";
};

export type PostApiAuthRegisterErrors = {
  /**
   * Default Response
   */
  401: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type PostApiAuthRegisterError =
  PostApiAuthRegisterErrors[keyof PostApiAuthRegisterErrors];

export type PostApiAuthRegisterResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type PostApiAuthRegisterResponse =
  PostApiAuthRegisterResponses[keyof PostApiAuthRegisterResponses];

export type DeleteApiUsersByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/api/users/{id}";
};

export type DeleteApiUsersByIdErrors = {
  /**
   * Default Response
   */
  404: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type DeleteApiUsersByIdError =
  DeleteApiUsersByIdErrors[keyof DeleteApiUsersByIdErrors];

export type DeleteApiUsersByIdResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type DeleteApiUsersByIdResponse =
  DeleteApiUsersByIdResponses[keyof DeleteApiUsersByIdResponses];

export type GetApiUsersByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/api/users/{id}";
};

export type GetApiUsersByIdErrors = {
  /**
   * Default Response
   */
  400: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  404: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type GetApiUsersByIdError =
  GetApiUsersByIdErrors[keyof GetApiUsersByIdErrors];

export type GetApiUsersByIdResponses = {
  /**
   * Default Response
   */
  201: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type GetApiUsersByIdResponse =
  GetApiUsersByIdResponses[keyof GetApiUsersByIdResponses];

export type PatchApiUsersByIdData = {
  body?: {
    name: string;
    email: string;
  } & {
    password: string;
  };
  path: {
    id: number;
  };
  query?: never;
  url: "/api/users/{id}";
};

export type PatchApiUsersByIdErrors = {
  /**
   * Default Response
   */
  404: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type PatchApiUsersByIdError =
  PatchApiUsersByIdErrors[keyof PatchApiUsersByIdErrors];

export type PatchApiUsersByIdResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      user: {
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      };
    };
    timestamp: string;
  };
};

export type PatchApiUsersByIdResponse =
  PatchApiUsersByIdResponses[keyof PatchApiUsersByIdResponses];

export type GetApiUsersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/";
};

export type GetApiUsersErrors = {
  /**
   * Default Response
   */
  400: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  404: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type GetApiUsersError = GetApiUsersErrors[keyof GetApiUsersErrors];

export type GetApiUsersResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      users: Array<{
        id: number;
        name: string;
        email: string;
        role: "admin" | "editor" | "viewer";
      }>;
    };
    timestamp: string;
  };
};

export type GetApiUsersResponse =
  GetApiUsersResponses[keyof GetApiUsersResponses];

export type GetApiPostsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/posts/";
};

export type GetApiPostsErrors = {
  /**
   * Default Response
   */
  400: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  404: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type GetApiPostsError = GetApiPostsErrors[keyof GetApiPostsErrors];

export type GetApiPostsResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      posts: Array<{
        id: number;
        user_id: number;
        title: string;
        content: string;
        created_at: string;
        deleted_at: string | unknown;
      }>;
    };
    timestamp: string;
  };
};

export type GetApiPostsResponse =
  GetApiPostsResponses[keyof GetApiPostsResponses];

export type PostApiPostsData = {
  body: {
    title: string;
    content: string;
  };
  path?: never;
  query?: never;
  url: "/api/posts/";
};

export type PostApiPostsErrors = {
  /**
   * Default Response
   */
  400: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type PostApiPostsError = PostApiPostsErrors[keyof PostApiPostsErrors];

export type PostApiPostsResponses = {
  /**
   * Default Response
   */
  201: {
    status: "success";
    message: string;
    data: {
      post: {
        id: number;
        user_id: number;
        title: string;
        content: string;
        created_at: string;
        deleted_at: string | unknown;
      };
    };
    timestamp: string;
  };
};

export type PostApiPostsResponse =
  PostApiPostsResponses[keyof PostApiPostsResponses];

export type DeleteApiPostsByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/api/posts/{id}";
};

export type DeleteApiPostsByIdErrors = {
  /**
   * Default Response
   */
  404: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type DeleteApiPostsByIdError =
  DeleteApiPostsByIdErrors[keyof DeleteApiPostsByIdErrors];

export type DeleteApiPostsByIdResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      post: {
        id: number;
        user_id: number;
        title: string;
        content: string;
        created_at: string;
        deleted_at: string | unknown;
      };
    };
    timestamp: string;
  };
};

export type DeleteApiPostsByIdResponse =
  DeleteApiPostsByIdResponses[keyof DeleteApiPostsByIdResponses];

export type GetApiPostsByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/api/posts/{id}";
};

export type GetApiPostsByIdErrors = {
  /**
   * Default Response
   */
  400: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  404: {
    status: "error";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type GetApiPostsByIdError =
  GetApiPostsByIdErrors[keyof GetApiPostsByIdErrors];

export type GetApiPostsByIdResponses = {
  /**
   * Default Response
   */
  201: {
    status: "success";
    message: string;
    data: {
      post: {
        id: number;
        user_id: number;
        title: string;
        content: string;
        created_at: string;
        deleted_at: string | unknown;
      };
    };
    timestamp: string;
  };
};

export type GetApiPostsByIdResponse =
  GetApiPostsByIdResponses[keyof GetApiPostsByIdResponses];

export type PatchApiPostsByIdData = {
  body?: {
    title?: string;
    content?: string;
  };
  path: {
    id: number;
  };
  query?: never;
  url: "/api/posts/{id}";
};

export type PatchApiPostsByIdErrors = {
  /**
   * Default Response
   */
  404: {
    status: "fail";
    message: string;
    timestamp: string;
  };
  /**
   * Default Response
   */
  500: {
    status: "error";
    message: string;
    timestamp: string;
  };
};

export type PatchApiPostsByIdError =
  PatchApiPostsByIdErrors[keyof PatchApiPostsByIdErrors];

export type PatchApiPostsByIdResponses = {
  /**
   * Default Response
   */
  200: {
    status: "success";
    message: string;
    data: {
      post: {
        id: number;
        user_id: number;
        title: string;
        content: string;
        created_at: string;
        deleted_at: string | unknown;
      };
    };
    timestamp: string;
  };
};

export type PatchApiPostsByIdResponse =
  PatchApiPostsByIdResponses[keyof PatchApiPostsByIdResponses];

export type ClientOptions = {
  baseUrl: "http://localhost:4000" | (string & {});
};
